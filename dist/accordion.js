// Generated by CoffeeScript 2.0.0-beta2
var TocasAccordion;

TocasAccordion = (function() {
  class TocasAccordion {
    $init({$elements, $selector, $module, $data, $options}) {
      $elements.find($data.title).on('click', function() {
        return $module.prototype._toggle($elements, $selector(this));
      });
      return ts.fn;
    }

    _event($elements, event, title) {
      return $elements.data(event).call($elements.get(0), Math.floor(title.index() / 2));
    }

    _open($elements, title) {
      var activeContent, content, height;
      this._event($elements, 'onOpen', title);
      this._event($elements, 'onChange', title);
      content = title.next();
      if (content.get(0) === $elements.find(this.$data.activeContent).get(0)) {
        return;
      }
      if (title.closest(this.$data.accordion).data('exclusive')) {
        activeContent = $elements.find(this.$data.activeContent);
        if (activeContent.length !== 0) {
          this._event($elements, 'onClose', activeContent.prev());
          this._event($elements, 'onChange', activeContent.prev());
          activeContent.css('height', '0px');
          activeContent.one('transitionend', function() {
            $selector(this).removeClass('active');
            return $selector(this).prev().removeClass('active');
          });
        }
      }
      title.addClass('active');
      content.addClass('active');
      content.css('height', 'auto');
      height = content.css('height');
      content.css('height', '0px');
      return setTimeout(() => {
        return content.css('height', height);
      }, 0);
    }

    _close($elements, title) {
      var content;
      this._event($elements, 'onClose', title);
      this._event($elements, 'onChange', title);
      content = title.next();
      if (!title.hasClass('active')) {
        return;
      }
      title.removeClass('active');
      content.css('height', '0px');
      return content.one('transitionend', function() {
        return content.removeClass('active');
      });
    }

    _toggle($elements, title) {
      if (title.hasClass('active')) {
        return this._close($elements, title);
      } else {
        return this._open($elements, title);
      }
    }

  };

  TocasAccordion.prototype.$name = 'accordion';

  TocasAccordion.prototype.$data = {
    title: '.title',
    content: '.content',
    accordion: '.ts.accordion',
    activeContent: '.content.active'
  };

  TocasAccordion.prototype.$options = {
    exclusive: true,
    onOpen: function() {},
    onClose: function() {},
    onChange: function() {}
  };

  TocasAccordion.prototype.$methods = {
    open: function({$elements, $module, $data}, index) {
      $module.prototype._open($elements, $elements.find($data.title).eq(index));
      return ts.fn;
    },
    close: function({$elements, $module, $data}, index) {
      $module.prototype._close($elements, $elements.find($data.title).eq(index));
      return ts.fn;
    },
    toggle: function({$elements, $module, $data}, index) {
      $module.prototype._toggle($elements, $elements.find($data.title).eq(index));
      return ts.fn;
    }
  };

  return TocasAccordion;

})();

new ts(TocasAccordion);
