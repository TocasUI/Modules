// Generated by CoffeeScript 2.0.0-beta4
var TocasAccordion;

TocasAccordion = (function() {
  class TocasAccordion {
    $init({$this, $module, $data, $options}) {
      // 尋找手風琴容器裡的每個標題，當標題被按下時。
      $this.find($data.title).on('click', function() {
        // 因為是標題被按下，所以我們呼叫切換手風琴分頁的函式，
        // 當手風琴是開的，則關，反之亦然。
        return $module.prototype._toggle($this, $selector(this));
      });
      return ts.fn;
    }

    // 呼叫指定事件函式。
    _event($this, event, title) {
      return $this.data(event).call($this.get(), Math.floor(title.index() / 2));
    }

    // 開啟手風琴分頁。
    _open($this, title) {
      var activeContent, content, height;
      // 呼叫指定事件函式。
      this._event($this, 'onOpen', title);
      this._event($this, 'onChange', title);
      // 取得內容元素。
      content = title.next();
      // 如果要開啟的分頁，正是已經被開啟的那個，
      // 那麼就忽略這次的請求。
      if (content.get() === $this.find(this.$data.activeContent).get()) {
        return;
      }
      // 如果手風琴只允許同ㄧ時間展開一個分頁。
      if (title.closest(this.$data.accordion).data('exclusive')) {
        // 那麼就上拉並關閉其他的分頁內容。
        activeContent = $this.find(this.$data.activeContent);
        if (activeContent.length !== 0) {
          // 呼叫事件函式。
          this._event($this, 'onClose', activeContent.prev());
          this._event($this, 'onChange', activeContent.prev());
          // 呼叫上拉動畫
          activeContent.css('height', '0px');
          activeContent.one('transitionend', function() {
            $selector(this).removeClass('active');
            return $selector(this).prev().removeClass('active');
          });
        }
      }
      // 啟用指定分頁的標題。
      title.addClass('active');
      // 啟用指定分頁的內容，並馬上顯示內容。
      content.addClass('active');
      content.css('height', 'auto');
      // 取得該內容展開時的高度。
      height = content.css('height');
      // 現在趕快把內容趁使用者沒看見之前藏起來。
      content.css('height', '0px');
      // 現在展開，讓使用者看到下拉的動畫。
      return setTimeout(() => {
        return content.css('height', height);
      }, 0);
    }

    // 關閉手風琴分頁。
    _close($this, title) {
      var content;
      // 呼叫事件函式。
      this._event($this, 'onClose', title);
      this._event($this, 'onChange', title);
      // 取得內容元素。
      content = title.next();
      if (!title.hasClass('active')) {
        return;
      }
      // 移除標題的啟用樣式。
      title.removeClass('active');
      // 將內容高度設為 0px ，這樣才能觸發上拉動畫。
      content.css('height', '0px');
      // 當上拉動畫結束的時候，才移除內容的啟用樣式，
      // 直接移除的話會沒辦法觸發動畫效果。
      return content.one('transitionend', function() {
        return content.removeClass('active');
      });
    }

    // 切換手風琴分頁。
    _toggle($this, title) {
      if (title.hasClass('active')) {
        return this._close($this, title);
      } else {
        return this._open($this, title);
      }
    }

  };

  TocasAccordion.prototype.$name = 'accordion';

  TocasAccordion.prototype.$data = {
    title: '.title', // 標題的類別名稱。
    content: '.content', // 分頁內容的類別名稱。
    accordion: '.ts.accordion', // 手風琴容器的類別名稱。
    activeContent: '.content.active' // 已啟用的分頁內容類別名稱。
  };

  TocasAccordion.prototype.$options = {
    exclusive: true, // 是否僅允許單個手風琴只有一個分頁能被打開，設為 false 則無限制。
    onOpen: function() {}, // 當分頁被打開時所呼叫的函式。
    onClose: function() {}, // 當分頁被關閉時所呼叫的函式。
    onChange: function() {} // 當分頁被打開或者關閉時所呼叫的函式。
  };

  TocasAccordion.prototype.$methods = {
    // 開啟指定索引的手風琴內容。
    open: function({$this, $module, $data}, index) {
      $module.prototype._open($this, $this.find($data.title).eq(index));
      return ts.fn;
    },
    // 關閉指定索引的手風琴內容。
    close: function({$this, $module, $data}, index) {
      $module.prototype._close($this, $this.find($data.title).eq(index));
      return ts.fn;
    },
    // 切換指定索引的手風琴內容，如果是開啟的則關閉，相反之。
    toggle: function({$this, $module, $data}, index) {
      $module.prototype._toggle($this, $this.find($data.title).eq(index));
      return ts.fn;
    }
  };

  return TocasAccordion;

})();

new ts(TocasAccordion);
