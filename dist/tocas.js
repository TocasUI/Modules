// Generated by CoffeeScript 2.0.0-beta2
var ts;

ts = function(selector, context = null) {
  var module;
  if (typeof selector !== 'function') {
    ts.selector = context !== null ? $selector(selector, context) : $selector(selector);
    return ts.fn;
  }
  module = selector;
  return ts.fn[module.prototype.$name] = function($arg = null, $arg2 = null, $arg3 = null) {
    var $context, $data, $elements, $module, $options, init, methods, opts, ref, value;
    $elements = ts.selector;
    $module = module;
    $data = module.prototype.$data || {};
    $options = module.prototype.$options || {};
    $options.tocas = module.prototype.$name;
    $context = {$elements, $selector, $module, $data, $options};
    methods = module.prototype.$methods || {};
    init = module.prototype.$init || function() {
      return ts.fn;
    };
    opts = module.prototype.$opts || function() {
      return ts.fn;
    };
    value = ts.fn;
    if ($arg === null) {
      $elements.each(function() {
        var self;
        self = $selector(this);
        if (self.data('tocas') != null) {
          return;
        }
        self.data($options);
        $context.$elements = self;
        return value = init.call(module, $context);
      });
    } else if (typeof $arg === 'object') {
      $elements.each(function() {
        var self;
        self = $selector(this);
        $context.$elements = self;
        if (self.data('tocas') == null) {
          self.data($options);
          init.call(module, $context);
        }
        self.data($arg);
        return value = opts.call(module, $context, $arg, $arg2, $arg3);
      });
    } else if (typeof $arg === 'string') {
      value = (ref = methods[$arg]) != null ? ref.call(module, $context, $arg2, $arg3) : void 0;
    }
    return value;
  };
};

ts.selector = {};

ts.fn = {};
