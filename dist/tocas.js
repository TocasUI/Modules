// Generated by CoffeeScript 2.0.0-beta4
var ts;

ts = function(selector, context = null) {
  var module;
  // 如果傳入的選擇器不是物件，那麼就只是普通的選擇器。
  if (typeof selector !== 'function') {
    ts.selector = context !== null ? $selector(selector, context) : $selector(selector);
    return ts.fn;
  }
  // 如果傳入的是物件，那麼就是欲註冊的 Tocas 模組。
  // 改名為 module 比較符合接下來的使用方式。
  module = selector;
  // 在 Tocas 函式鏈中新增一個相對應的模組函式。
  return ts.fn[module.prototype.$name] = function($arg = null, $arg2 = null, $arg3 = null) {
    var $context, $data, $elements, $module, $options, init, methods, opts, value;
    // 先用 Tocas Core 核心來選取指定元素，然後放到上下文物件之後傳遞到模組內使用。
    $elements = ts.selector;
    $module = module;
    $data = module.prototype.$data || {};
    $options = module.prototype.$options || {};
    // 在選項中插入 Tocas 初始化開關，用以檢測模組是否被初始化過。
    $options.tocas = module.prototype.$name;
    // 上下文物件讓我們可以在模組中展開，使用相關的內容。
    $context = {$elements, $selector, $module, $data, $options};
    // 初始化一些模組該有的函式。
    methods = module.prototype.$methods || {};
    init = module.prototype.$init || function() {
      return ts.fn;
    };
    opts = module.prototype.$opts || function() {
      return ts.fn;
    };
    // 最終的回傳值。
    value = ts.fn;
    // 每個節點。
    $elements.each(function() {
      var ref;
      $context.$this = $selector(this);
      // 如果第一個參數是空的，那麼使用者想直接呼叫這個模組的初始化函式。
      if ($arg === null) {
        if ($context.$this.data('tocas') != null) {
          return;
        }
        // 用模組的預設選項，初始化選取的模組。
        $context.$this.data($options);
        // 然後呼叫自定義的初始化模組函式。
        return value = init.call(module, $context);
      // 如果第一個參數是物件，就表示使用者想要傳入一個選項物件。
      } else if (typeof $arg === 'object') {
        if ($context.$this.data('tocas') == null) {
          // 用模組的預設選項，初始化選取的模組。
          $context.$this.data($options);
          // 呼叫初始化函式
          init.call(module, $context);
        }
        // 套用新的選項到指定元素。
        $context.$this.data($arg);
        // 然後呼叫自定義的選項模組函式。
        return value = opts.call(module, $context, $arg, $arg2, $arg3);
      // 如果第一個是字串，就表示使用者想要呼叫模組的自訂方法。
      } else if (typeof $arg === 'string') {
        // 呼叫指定的自訂方法，並傳入上下文物件好讓我們在模組中使用這些東西，
        // 順便綁定 this 為模組本身，這樣才能呼叫模組自己的其他輔助函式。
        return value = (ref = methods[$arg]) != null ? ref.call(module, $context, $arg2, $arg3) : void 0;
      }
    });
    return value;
  };
};

// 初始化選擇器。
ts.selector = {};

// 初始化 Tocas JS 的函式鏈。
ts.fn = {};
